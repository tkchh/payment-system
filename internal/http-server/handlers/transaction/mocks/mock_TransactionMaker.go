// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TransactionMaker is an autogenerated mock type for the TransactionMaker type
type TransactionMaker struct {
	mock.Mock
}

// AddTransaction provides a mock function with given fields: from, to, amount
func (_m *TransactionMaker) AddTransaction(from string, to string, amount float64) error {
	ret := _m.Called(from, to, amount)

	if len(ret) == 0 {
		panic("no return value specified for AddTransaction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, float64) error); ok {
		r0 = rf(from, to, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewTransactionMaker creates a new instance of TransactionMaker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionMaker(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionMaker {
	mock := &TransactionMaker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
